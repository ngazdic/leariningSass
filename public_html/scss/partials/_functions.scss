


////////MIXIN://///////



//Sa ovim mi u sustini cuvamo neke proste funkcije, tj cuvamo neke delove 
//koda koji nam se ponavaljaju , u okviru funkcije mix in. Na primer ispod,
//posto border radius koristimo za dosta stvari, kao i vendor prefikse koji idu
//sa njim, mi cemo napraviti funkciju radius i uraditi sledece:


@mixin radius($radius){

    ////////IF ELSE//////////
    //dole sam na dnu definisao varijablu enable-radius i dodelio joj boolean true;
    //dakle ja ovde ispod ispirujem ako je enable radius true onda ce sve clase koje
    //imaju @iunclude radius($radius); da dobiju naznaceni radius, u zavisnosti koliku vrednost upisem
    //ako je false onda nece imati border radius, tj border radius ce biti 0. AKO ZELIMO DA ISKLJUCIMO
    //BORER-RADIUS ONDA VARIJABLI ENABLE_RADIUS DODELIMO VREDNOST FALSE;
    
    
    @if($enable-radius){

        border-radius:$radius;
        -moz-border-radius: $radius;
        -webkit-border-radius: $radius;
        -o-border-radius:$radius;
    }

    @else{

        border-radius:0;
        -moz-border-radius: 0;
        -webkit-border-radius: 0;
        -o-border-radius:0;
    }


}


//mi smo iznad napravili funkciju radius i njoj kao argument dodali radius, da bi 
//mogli da menjamo border-radius od slucaja do slucaja kada nam gde zatreba i koliki.



//ovo ispod je neka custom varijanta gde mi ubacujemo vise parametara da bi 
//oblikovali ovaj border radius
@mixin customRadius($upperLeft, $upperRight, $bottomLeft, $bottomRight){
    @if($enable-radius){
        border-radius:$upperLeft $upperRight $bottomLeft $bottomRight;
        -moz-border-radius: $upperLeft $upperRight $bottomLeft $bottomRight;
        -webkit-border-radius: $upperLeft $upperRight $bottomLeft $bottomRight;
        -o-border-radius:$upperLeft $upperRight $bottomLeft $bottomRight;
    }
    @else{


        border-radius:0;
        -moz-border-radius: 0;
        -webkit-border-radius: 0;
        -o-border-radius:0;
    }

}

@mixin padding($pt, $pr, $pb, $pl){

    padding:$pt $pr $pb $pl;
}

@mixin backgroundColor($bg){

    background-color:$bg;
}

@mixin displayFlex(){

   display: -moz-flex;
display: -webkit-flex;
display: -ms-flexbox; 
display: flex;
}









////////IF ELSE//////////


$enable-radius: true;



///////FUNCTIONS///////

//Kreiracemo jednu funkciju koja ce da prima jedan parametar a to je color i ta 
//funkcija treba da nam ispita kakva je to boja da li je svetla ili tamna i u zavisnosti
//od toga da nam ispise boju slova u zavisnosti od pozadine sekcije. Da mi ne moramo svaki put
//da ispitujemo koja boja nam treba

//YIQ- to su kontrasti potpuni od onih boja koje koristimo za 180 stepni



@function colorYIQ($color){
    $r : red($red);
    $g : green($color);
    $b : blue($blue);
    
    
    $yiq : $r * 0.299 + $g * 0.587 + $b * 0.114; //ovo je formula za dobijanje tog yiq-a. dakle ako odemo
                                                  //online i guglamo videcemo da se mnozenjem ovih brojeva
                                                  //dobija poptupni polar oposite od ovih osnovnih boja
                                                  
       @if($yiq > 129){ //ako je yiq veci od 129 onda je boja svetla i trebaju nam crna slova i obrnuto;
                                                      
           @return $black;                                           
       }   @else{
           
           @return $white;
       }                                          
}

